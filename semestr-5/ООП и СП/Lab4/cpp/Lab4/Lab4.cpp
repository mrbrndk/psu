//1.Класс − одномерный массив.Дополнительно перегрузить следующие операции :
//*− умножение массивов;
//[] − доступ по индексу.

//Порядок выполнения работы.
//1. Создать шаблон заданного класса.Определить конструкторы, деструктор, перегруженную операцию присваивания(“ = ”) 
//и операции, заданные в варианте задания.
//2. Написать программу тестирования, в которой проверяется использование шаблона для стандартных типов данных.
//4. Определить пользовательский класс, который будет использоваться в качестве параметра шаблона.Определить в классе 
//необходимые функции и перегруженные операции.
//5. Написать программу тестирования, в которой проверяется использование шаблона для пользовательского типа.
//6. Выполнить тестирование.
//Методические указания.

//1. Класс АТД реализовать как динамический массив.Для этого определение класса должно иметь следующие поля :
//− указатель на начало массива;
//− максимальный размер массива;
//− текущий размер массива.
//5. Для шаблонов массивов в качестве стандартных типов использовать целые и вещественные типы.Для пользовательского типа взять класс
//“комплексное число” complex.
//6. Реализацию шаблона следует разместить вместе с определением в
//заголовочном файле.
//7. Тестирование должно быть выполнено для всех типов данных и
//для всех операций.
//8. Реализовать версии на C#, Java.

#include <iostream>
#include <Windows.h>
#include "Header.h"

using namespace std;

int main()
{
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);

	cout << "Введите 3 значения int:" << endl;
	List<int> obj1;
	for (int i = 0; i < 3; i++) obj1.input();
	obj1[1] = 5;
	cout << "obj1: ";
	obj1.print();
	int val = obj1[2];
	cout << "obj1[2]: " << val << endl;


	cout << "Введите 3 значения double:" << endl;
	List<double> obj2, obj3;
	for (int i = 0; i < 3; i++) obj3.input();
	cout << "Введите еще 3 значения double:" << endl;
	for (int i = 0; i < 3; i++) obj2.input();
	obj3 = obj3 * obj2;
	cout << "obj3: ";
	obj3.print();

	cout << "Введите 2 значения complex:" << endl;
	List<complex> obj4, obj5;
	obj5.input();
	obj4 = obj5;
	obj5 = obj4 * obj5;
	cout << "obj5: ";
	obj5.print();
	return 0;
}