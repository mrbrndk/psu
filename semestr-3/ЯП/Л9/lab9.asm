.486 									;Указание набора команд
.model small							;Модель памяти EXE - программы
Stk SEGMENT STACK use16					;Описание сегмента стека
    ASSUME ss:Stk						;Ассоциирование регистра SS
    db 100h dup(0)						;Резервирование 256 байт для стека
Stk ENDS								;Завершение описания сегмента стека
Data SEGMENT use16						;Описание сегмента данных
	ASSUME ds:Data						;Ассоциирование регистра DS
mess db 'H e l l o   w o r l d !', 0	;Описание строки
Data ENDS								;Завершение описания сегмента данных
Code SEGMENT use16						;Описание сегмента кода
	ASSUME cs:Code						;Ассоциирование регистра CS
start:									;Метка начала программы
    mov ax, seg mess					;Загружаем в AX адрес сегмента данных
	mov ds, ax							;Устанавливаем регистр DS на сегмент данных
	mov ax, 0b800h						;Загружаем в AX адрес сегмента видеобуфера
	mov es, ax							;Устанавливаем регистр ES на видеобуфер
	xor ax, ax							;Очищаем регистр AX
	mov di, ax							;Записываем в DI значение AX
	mov cx, 2000						;Записываем в регистр CX количество повторений
	rep stosw							;Заполняем видеобуфер нулями
	mov di, 1660						;Заносим в регистр DI смещение строки
	mov ah, 61h							;Записываем в AH параметры цвета
	lea si, mess						;Загружаем в SI смещение строки mess
	mov cx, 23							;Загружаем в CX количество символов в строке
next0:									;Метка цикла вывода сообщения
	lodsb								;Записываем в AL следующий символ строки
    stosw								;Записываем в видеобуфер символ
    loop next0							;Цикл вывода всей строки
next1:									;Метка для перехода на ожидание
    in al, 60h							;Чтение кода нажатой клавиши на клавиатуре
    cmp al, 1							;Сравнение с 1 (код ESC)
    jne next1							;Переход если не равно
	mov ax, 4c00h						;Записываем в AX номер функции завершения
    int 21h								;Вызов прерывания MS-DOS 21h
Code ENDS								;Завершение описания сегмента кода
end start								;Конец программы